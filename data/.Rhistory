if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="histogram"){
plot = hist(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
data = readRDS("./data/student-mat_fact.rds")
data$Dalc <- as.factor(data$Dalc)
data$Dalc <- mapvalues(data$Dalc, from = 1:5, to = c("Very Low", "Low", "Medium", "High", "Very High"))
data$Walc <- as.factor(data$Walc)
data$Walc <- mapvalues(data$Walc, from = 1:5, to = c("Very Low", "Low", "Medium", "High", "Very High"))
custom_graph = function(variable, type="histogram", prop = FALSE){
if(prop==TRUE){
if(type=="histogram"){
plot = hist(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="histogram"){
plot = hist(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph(data$Dalc, prop = TRUE)
custom_graph = function(variable, type="histogram", prop = FALSE){
if(prop==TRUE){
if(type=="histogram"){
plot = hist(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph(data$Dalc, prop=TRUE)
custom_graph(data$G3, prop=TRUE)
custom_graph(data$G2, prop=TRUE)
custom_graph(data$G1, prop=TRUE)
par(mfrow=c(1,3))
custom_graph(data$G3, prop=TRUE)
custom_graph(data$G2, prop=TRUE)
custom_graph(data$G1, prop=TRUE)
custom_graph = function(variable, type="bar", prop = FALSE){
if(prop==TRUE){
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph(data$Dalc, prop = TRUE)
data = readRDS("./data/student-por_fact.rds")
custom_graph = function(variable, type="histogram", prop = FALSE){
if(prop==TRUE){
if(type=="histogram"){
plot = hist(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="histogram"){
plot = hist(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph = function(variable, type="barplot", prop = FALSE){
if(prop==TRUE){
if(type=="barplot"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$sex, "pie")
rm(list = ls())
graphics.off()
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/")
library(plyr)
data = readRDS("./data/student-por_fact.rds")
data$Dalc <- as.factor(data$Dalc)
data$Dalc <- mapvalues(data$Dalc, from = 1:5, to = c("Very Low", "Low", "Medium", "High", "Very High"))
data$Walc <- as.factor(data$Walc)
data$Walc <- mapvalues(data$Walc, from = 1:5, to = c("Very Low", "Low", "Medium", "High", "Very High"))
detach("package:plyr", unload=TRUE)
custom_graph = function(variable, type="histogram", prop = FALSE){
if(prop==TRUE){
if(type=="histogram"){
plot = hist(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="histogram"){
plot = hist(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
hist
hist(data$Walc)
hist(data$G3)
custom_graph(data$Walc. "barplot")
custom_graph(data$Walc, "bar")
custom_graph = function(variable, type="histogram", prop = FALSE){
if(prop==TRUE){
if(type=="histogram"){
plot = hist(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="bar"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="histogram"){
plot = hist(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc, "bar")
custom_graph = function(variable, type="bar", prop = FALSE){
if(prop==TRUE){
if(type=="bar"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="bar"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph(data$Dalc, prop = TRUE)
par(mfrow = c(1, 3))
custom_graph(data$Walc, prop = TRUE)
custom_graph(data$Dalc, prop = TRUE)
custom_graph(data$G1, prop = TRUE)
hist(data$G1)
graphics.off()
hist(data$G1)
hist(data$G2)
hist(data$G3)
par(mfrow = c(1, 3))
hist(data$G1)
hist(data$G2)
hist(data$G3)
custom_graph(data$G1, prop = TRUE)
library(formatR)
tidy_source(source = "./Alcohol_consumption_and_grades/SPL_alc_grad.R", file= "./Alcohol_consumption_and_grades/SPL_alc_grad_fin.R")
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data/")
data1 = readRDS("./student-por_fact.rds")
fit = lm(G3~., data)
shapiro.test(fit$residuals)
fit$residuals
hist(fit$residuals)
graphics.off()
hist(fit$residuals)
res_fit = sapply(data, function(ind) shapiro.test(lm(G3~ind)$residuals/sd(lm(G3~ind)$residuals))$p.value ))
res_fit = sapply(data, function(ind) shapiro.test(lm(G3~ind)$residuals/sd(lm(G3~ind)$residuals))$p.value )
res_fit = sapply(data, function(ind) shapiro.test(lm(G3~ind, data)$residuals/sd(lm(G3~ind, data)$residuals))$p.value )
res_fit
fit
model.matrix(G3~., data)
f = model.matrix(G3~., data)
View(f)
f = model.matrix(G3~.-1, data)
res_fit = sapply(f, function(ind) shapiro.test(lm(data$G3~ind, f)$residuals/sd(lm(data$G3~ind, f)$residuals))$p.value )
f = as.data.frame(model.matrix(G3~.-1, data))
View(f)
res_fit = sapply(f, function(ind) shapiro.test(lm(data$G3~ind, f)$residuals/sd(lm(data$G3~ind, f)$residuals))$p.value )
res_fit
plot(f#)
plot(f)
cor(f)
f$schoolMS = NULL
cor(f)
df = as.data.frame(res_fit)
diag(df) = 1
ind = as.data.frame(df < 0.05)
ind
pca_imp = function(d, threshold=0.9){
if(all(sapply(d, is.numeric))){
fit = prcomp(d)
cum_prop = summary(fit)$importance['Cumulative Proportion',]
d = cbind(d, fit$x[,1:min(which(cum_prop>threshold))])
return(d)
} else {
cat("Input has to be a data frame of numeric data or a matrix.")
}
}
l = pca_imp(f)
View(l)
fit = lm(G3~G2+G1, data)
shapiro.test(fit$residuals)
plot(fit$residuals)
hist(fit$residuals)
summary(data)
fit = lm(log(G3)~log(G2)+log(G1), data)
shapiro.test(fit$residuals)
fit = lm(G3~log(G2)+log(G1), data)
fit = lm(G3~log(G2)+logG1, data)
fit = lm(G3~log(G2)+G1, data)
fit = lm(G3~G2+G1, data)
sapply(data, function(col) sum(is.na(col)))
plot(fit)
summary(data)
plot(data$G1)
hist(data$G1)
hist(data$G"")
hist(data$G2)
plot_ly(data, x=~G2,type="hist")
plot_ly(data, x=~G2,type="histogram2d")
plot_ly(data, x=~G2,type="histogram2d")
plot_ly(data, x=~G2,type="histogram")
data_out = data[data$G2>5,]
fit = lm(G3~G2+G1, data_out)
plot(fit)
hist(data$G3)
data_out = data[data$G2>5&data$G3>5,]
fit = lm(G3~G2+G1, data_out)
plot(fit)
plot_ly(data, x=~G3,type="histogram")
plot_ly(data, x=~G1,type="histogram")
data_out = data[data$G2>5&data$G3>5&data$G1>5,]
fit = lm(G3~G2+G1, data_out)
plot(fit)
shapiro.test(fit$residuals)
qnorm(fit$residuals)
hist(fit$residuals)
fit = glm(G3~G2+G1, data)
fit = glm(G3~G2+G1, data, family="gaussian")
plot(fit)
mean(fit$residuals)
sd(fit$residuals)
fit = lm(G3~G2+G1, data)
fit
fit = lm(G3~G2+G1, data_out)
fit
fit = lm(G3~G2+G1, data)
fit = glm(G3~G2+G1, data, family="gaussian")
fit
fit = glm(G3~G2+G1, data, family="quasipoisson")
fit
fit = glm(G3~G2+G1, data, family="poisson")
fit
fit = aov(G3~G2+G1, data_out)
fit
fit = glm(G3~G2+G1, data, family="quasigaussian")
fit = glm(G3~G2+G1, data, family = "poisson")
fit
plot(data$G2, data$G3)
plot(data_out$G2, data_out$G3)
plot(data_out$G1, data_out$G3)
pairs(data)
pairs(data[,seq(1:15)])
pairs(data[,c("G3", "G2", "G1", "Dalc", "Walc")])
pairs(data[,c("G3", "G2", "G1")])
data_out = data[data$G2>5&data$G3>5&data$G1>5,]
data_out = data[data$G2>5&data$G3>5&data$G1>5,c("G3", "G2", "G1")]
pairs(data_out)
649-627
shapiro.test(fit$residuals/sd(fit$residuals))
fit = lm(G3~G2+G1, data)
plot(fit)
par(mfrow(4,1))
par(mfrow=c(4,1))
plot(fit)
par(mfrow=c(1,4))
plot(fit)
par(mfrow=c(2,2))
plot(fit)
fit = lm(G3~G2+G1, data)
fit_out = lm(G3~G2+G1, data_out)
plot(fit_out)
data_out2 = data_out[c(-62, 647, 63),]
fit_out2 = lm(G3~G2+G1, data_out)
plot(fit_out2)
fit_out2 = lm(G3~G2+G1, data_out2)
data_out2 = data_out[c(-62, 647, 63),]
data_out2 = data_out[-c(62, 647, 63),]
data_out2 = data_out[-c(62,63, 647),]
fit_out2 = lm(G3~G2+G1, data_out2)
plot(fit_out2)
data_out2 = data_out[-62,]
fit_out2 = lm(G3~G2+G1, data_out2)
plot(fit_out2)
data_out2 = data_out[-62,]
fit_out2 = lm(G3~G2+G1, data_out2)
plot(fit_out2)
fit_out2$residuals
summary(fit_out2$residuals)
hist(fit_out2$residuals)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data/")
data = readRDS("./student-mat_fact.rds")
pairs(data[,c("G3", "G2", "G1")])
data_out = data[data$G2>5&data$G3>5&data$G1>5,c("G3", "G2", "G1")]
data_out2 = data_out[-62,]
fit = lm(G3~G2+G1, data)
par(mfrow=c(2,2))
plot(fit)
fit_out = lm(G3~G2+G1, data_out)
plot(fit_out)
shapiro.test(fit$residuals/sd(fit$residuals))
shapiro.test(fit_out$residuals/sd(fit_out$residuals))
mean(fit_out$residuals)
mean(fit$residuals)
mean(fit$residuals/sd(fit_out$residuals))
mean(fit_out$residuals/sd(fit_out$residuals))
mean(fit$residuals/sd(fit$residuals))
mean(fit_out$residuals/sd(fit_out$residuals))
mean(fit_out$residuals)
mean(fit$residuals)
cor(data)
cor(data_out)
hetero_test <-  function(dep, indep){
library(lmtest)
fit = lm(dep~.,indep)
res_fit =  bptest(fit) #summary(lm(fit$residuals^2~.,indep))
ifelse(res_fit$p.value>0.05,
return("Assumption of homoscedasticity holds"),
return("Assumption of homoscedasticity is rejected"))
}
hetero_test(data_out$G3, c(data_out$G1,data_out$G2))
hetero_test(data_out$G3, as.data.frame(c(data_out$G1,data_out$G2)))
hetero_test(data_out$G3, as.data.frame(cbind(data_out$G1,data_out$G2)))
hetero_test(data$G3, as.data.frame(cbind(data$G1,data$G2)))
bptest(fit)
bptest(fit_out)
summary(fit_out)
summary(fit)
tidy_source(source="../regression.R", file ="../regressions/SPL_regression.R")
