qqnorm(log2(swiss$Catholic))
swiss2 = swiss
swiss2$Catholic = log2(swiss2$Catholic)
get_strange_var(swiss2)
swiss2$Catholic = log(swiss2$Catholic)
swiss2 = swiss
swiss2$Catholic = log(swiss2$Catholic)
get_strange_var(swiss2)
set.seed(777)
library(TeachingDemos)
library(geneplotter)
library(ggplot2)
library(plyr)
library(LSD)
library(boot)
library(ade4)
library(DESeq2)
library(vsn)
library(gplots)
library(RColorBrewer)
library(psych)
library(car)
library(matrixStats)
library(MASS)
library(vegan)
library(locfit)
library(stringr)
library(sva)
library(limma)
library(corpcor)
dds <- makeExampleDESeqDataSet(m=8, betaSD = 2)
install.packages("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
dds <- makeExampleDESeqDataSet(m=8, betaSD = 2)
update.packages()
update.packages(checkBuilt=TRUE, ask=FALSE)
install.packages("psych")
install.packages("psych")
library(DESeq2)
dds <- makeExampleDESeqDataSet(m=8, betaSD = 2)
colData(dds)$sex <- factor(rep(c("m", "f"), 4))
cts <- counts(dds)
ranGenes <- floor(runif(300)*1000)
ranGenes <- floor(runif(300)*1000)
for(i in ranGenes){
cts[i, colData(dds)$sex == "m"] <- as.integer(cts[i, colData(dds)$sex == "m"]
+ round(rnorm(1,4, sd = 1)))
}
counts(dds) <- cts
counts(dds)[5:10,]
pl <- meanSdPlot(counts(dds))
library(ggplot2)
source("https://bioconductor.org/biocLite.R")
biocLite("vsn")
library(vsn)
pl <- meanSdPlot(counts(dds))
pl$gg + ylim(0,100)
rldSim <- assay(rlogTransformation(dds, blind=TRUE))
meanSdPlot(rldSim)
data(swiss)
pl <- meanSdPlot(counts(dds))
pl$gg + ylim(0,100)
rldSim <- assay(rlogTransformation(dds, blind=TRUE))
meanSdPlot(rldSim)
glm
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/")
data = read.csv2("./data/student-mat.csv")
data_mat = read.csv2("./data/student-mat.csv")
data_por = read.csv2("./data/student-por.csv")
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/")
data_mat = read.csv2("./data/student-mat.csv")
data_por = read.csv2("./data/student-por.csv")
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/student-alcohol-consumption/")
d1=read.table("./data/student-mat.csv",sep=",",header=TRUE)
d2=read.table("./data/student-por.csv",sep=",",header=TRUE)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/")
d1=read.table("./data/student-mat.csv",sep=",",header=TRUE)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/")
d1=read.csv("./data/student-mat.csv",header=TRUE)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL")
d1=read.csv("./data/student-mat.csv",header=TRUE)
d2=read.csv("./data/student-por.csv", header=TRUE)
d1$failures
summary(d1$failures)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
d1 %>%
select(variables_to_factors) %>%
mutate_each_(funs(factor), variables_to_factors)
library(dplyr)
d1 %>%
select(variables_to_factors) %>%
mutate_each_(funs(factor), variables_to_factors)
d1 %>%
select(variables_to_factors) #%>%
variables_to_factors
d1 %>%
select_(.dots=variables_to_factors) #%>%
d1 %>%
select_(.dots=variables_to_factors) #%>%
d2 = d1 %>%
select_(.dots=variables_to_factors) #%>%
d2 = d1 %>%
select_(.dots=variables_to_factors) %>%
mutate_each_(funs(factor))
d2 = d1 %>%
mutate_each_(funs(factor),.dots=variables_to_factors)
d2 = d1 %>%
mutate_each_(funs(factor),vars =variables_to_factors)
d3 = d1 %>%
mutate_each_(funs(factor),vars =variables_to_factors)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL")
student_mat=read.csv("./data/student-mat.csv",header=TRUE)
student_por=read.csv("./data/student-por.csv", header=TRUE)
data_prep = function(data_frame){
library(dplyr)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, paste0("./data/", data_frame, "fact.csv"))
}
data_prep = function(data_frame){
library(dplyr)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, paste0("./data/", data_frame, "fact.csv"))
cat("Data preprocessing is finished")
}
data_prep(student_mat)
data_prep = function(data_frame){
library(dplyr)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, paste0("./data/", data_frame, "fact.csv"), row.names = FALSE)
cat("Data preprocessing is finished")
}
data_prep(student_mat)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = student_mat
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, paste0("./data/", data_frame, "fact.csv"), row.names = FALSE)
write.csv(data_frame, file = paste0("./data/", data_frame, "fact.csv"), row.names = FALSE)
paste0("./data/", data_frame, "fact.csv")
names(data_frame)
as.character(data_frame)
list.files()
list.files("./data/")
data.folder = "./data"
files = list.files(data.folder)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data")
files = list.files()
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(data_frame, "fact.csv"), row.names = FALSE)
cat("Data preprocessing is finished")
}
sapply(files, data_prep)
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(file_name, "fact.csv"), row.names = FALSE)
cat("Data preprocessing is finished")
}
sapply(files, data_prep)
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = strsplit(file_name,split = ".")[1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(file_name, "fact.csv"), row.names = FALSE)
cat("Data preprocessing is finished\n")
}
sapply(files, data_prep)
file_name = files[1]
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = strsplit(file_name,split = ".")[1]
file_name = files[1]
file_name = files[1]
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = strsplit(file_name,split = ".")[[1]]
file_name = files[1]
file_name = strsplit(file_name,split = ".")
file_name
file_name = base::strsplit(file_name, split = ".")
file_name = files[1]
file_name = base::strsplit(file_name, split = ".")
file_name = files[1]
file_name = base::strsplit(file_name, split = "[.]")
file_name = files[1]
file_name = base::strsplit(file_name, split = "[.]")[[1]]
file_name = files[1]
file_name = base::strsplit(file_name, split = "[.]")[[1]][1]
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data")
files = list.files()
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = base::strsplit(file_name, split = "[.]")[[1]][1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(file_name, "fact.csv"), row.names = FALSE)
cat("Data preprocessing for ", file_name, "is  finished\n")
}
sapply(files, data_prep)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data")
files = list.files()
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = base::strsplit(file_name, split = "[.]")[[1]][1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(file_name, "_fact.csv"), row.names = FALSE)
cat("Data preprocessing for ", file_name, "is  finished\n")
}
sapply(files, data_prep)
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = base::strsplit(file_name, split = "[.]")[[1]][1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
write.csv(data_frame, file = paste0(file_name, "_fact.csv"), row.names = FALSE)
cat("Data preprocessing for", file_name, "is finished\n")
}
sapply(files, data_prep)
data = read.csv("student-mat_fact.csv",sep=",")
summary(data)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data")
files = list.files()
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = strsplit(file_name, split = "[.]")[[1]][1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
saveRDS(data_frame, file = paste0(file_name, "_fact.rds"), row.names = FALSE)
cat("Data preprocessing for", file_name, "is finished\n")
}
sapply(files, data_prep)
setwd("/Users/lizzzi111/Documents/Master/SoSe17/SPL/SPL/data")
files = list.files()
data_prep = function(file_name){
library(dplyr)
data_frame = read.csv(file_name, sep = ",", header = TRUE)
file_name = strsplit(file_name, split = "[.]")[[1]][1]
variables_to_factors = c("Medu", "Fedu", "famrel", "freetime",
"health", "goout", "Walc", "Dalc",
"traveltime", "studytime")
data_frame = data_frame %>%
mutate_each_(funs(factor), vars=variables_to_factors)
saveRDS(data_frame, file = paste0(file_name, "_fact.rds"))
cat("Data preprocessing for", file_name, "is finished\n")
}
sapply(files, data_prep)
data = readRDS("student-mat_fact.rds")
summary(data)
barplot(data$school, ylim=c(0, 30), xlab="Result", ylab="N", col="black",
main="Absolute frequency")
barplot(data$school, xlab="Result", ylab="N", col="black",
main="Absolute frequency")
barplot(data$school)#, xlab="Result", ylab="N", col="black",
barplot(tbale(data$school))#, xlab="Result", ylab="N", col="black",
barplot(table(data$school))#, xlab="Result", ylab="N", col="black",
barplot(table(data$school)), col="black", main=paste0("Absolute frequency of the variable", "school"))
barplot(table(data$school), col="black", main=paste0("Absolute frequency of the variable", "school"))
barplot(table(data$school), col="black", main=paste0("Absolute frequency of the variable ", "school"))
barplot(table(data$school), main=paste0("Absolute frequency of the variable ", "school"))
custom_graph = function(variable, type){
if(type=="barplot"){
barplot(table(variable), main=paste0("Absolute frequency of the variable ", variable))
}
}
custom_graph = function(variable, type="barplot"){
if(type=="barplot"){
barplot(table(variable), main=paste0("Absolute frequency of the variable ", variable))
}
}
custom_graph(data$scool)
custom_graph = function(variable, type="barplot"){
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", variable))
}
return(plot)
}
custom_graph(data$scool)
custom_graph(data$school)
cat(data$school)
as.character(data$school)
?deparse
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(variable)))
}
return(plot)
}
custom_graph(data$school)
names(data$school)
print(data$school)
deparse(substitute(variable))
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
return(plot)
}
custom_graph(data$school)
sapply(data[, c(1:3)])
sapply(data[, c(1:3)], custom_graph)
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
sapply(data[, c(1:3)], custom_graph)
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
sapply(data[, c(1:3)], custom_graph)
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="barplot"){
plot = plot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph(data$school)
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph(data$school, "pie")
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph = function(variable, type="barplot"){
name = cat(variable)
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph(data$school, "mosaicplot")
custom_graph(data[,c("school", "famsize")], "mosaicplot")
custom_graph = function(variable, type="barplot"){
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph(data[,c("school", "famsize")], "mosaicplot")
custom_graph(data[,c("school", "famsize")], "pie")
custom_graph(data[,c("school", "famsize")])
custom_graph(data[,c("school", "higher")])
custom_graph = function(variable, type="barplot"){
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
custom_graph(data[,c("school", "higher")])
custom_graph(data[,c("school", "higher")], "spineplot")
custom_graph(data[,c("school", "higher")], "mosaicplot")
custom_graph(data$Walc)
custom_graph(data$Dalc)
custom_graph = function(variable, type="barplot", prop = FALSE){
if(prop=TRUE){
if(type=="barplot"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph = function(variable, type="barplot", prop = FALSE){
if(prop==TRUE){
if(type=="barplot"){
plot = barplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(prop.table(table(variable)), main=paste0("Relative frequency of the variable ", deparse(substitute(variable))))
}
} else {
if(type=="barplot"){
plot = barplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="pie"){
plot = pie(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="mosaicplot"){
plot = mosaicplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
if(type=="spineplot"){
plot = spineplot(table(variable), main=paste0("Absolute frequency of the variable ", deparse(substitute(variable))))
}
}
}
custom_graph(data$Walc)
custom_graph(data$Dalc, prop=TRUE)
custom_graph(data$school)
custom_graph(data$famsize)
custom_graph(data[, c("famsize", "Medu" )])
custom_graph(data[, c("famsize", "Medu" )], "mosaicplot")
custom_graph(data[, c("famsize", "Fedu" )], "mosaicplot")
custom_graph(data[, c("freetime", "goout" )], "mosaicplot")
